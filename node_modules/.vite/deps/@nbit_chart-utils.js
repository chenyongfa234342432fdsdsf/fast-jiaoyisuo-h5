import {
  __commonJS,
  __toESM
} from "./chunk-S5KM4IGW.js";

// node_modules/.pnpm/dayjs@1.11.3/node_modules/dayjs/dayjs.min.js
var require_dayjs_min = __commonJS({
  "node_modules/.pnpm/dayjs@1.11.3/node_modules/dayjs/dayjs.min.js"(exports, module) {
    !function(t, e) {
      "object" == typeof exports && "undefined" != typeof module ? module.exports = e() : "function" == typeof define && define.amd ? define(e) : (t = "undefined" != typeof globalThis ? globalThis : t || self).dayjs = e();
    }(exports, function() {
      "use strict";
      var t = 1e3, e = 6e4, n = 36e5, r = "millisecond", i = "second", s = "minute", u = "hour", a = "day", o = "week", f = "month", h = "quarter", c = "year", d = "date", $ = "Invalid Date", l = /^(\d{4})[-/]?(\d{1,2})?[-/]?(\d{0,2})[Tt\s]*(\d{1,2})?:?(\d{1,2})?:?(\d{1,2})?[.:]?(\d+)?$/, y = /\[([^\]]+)]|Y{1,4}|M{1,4}|D{1,2}|d{1,4}|H{1,2}|h{1,2}|a|A|m{1,2}|s{1,2}|Z{1,2}|SSS/g, M = { name: "en", weekdays: "Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_"), months: "January_February_March_April_May_June_July_August_September_October_November_December".split("_") }, m = function(t2, e2, n2) {
        var r2 = String(t2);
        return !r2 || r2.length >= e2 ? t2 : "" + Array(e2 + 1 - r2.length).join(n2) + t2;
      }, g = { s: m, z: function(t2) {
        var e2 = -t2.utcOffset(), n2 = Math.abs(e2), r2 = Math.floor(n2 / 60), i2 = n2 % 60;
        return (e2 <= 0 ? "+" : "-") + m(r2, 2, "0") + ":" + m(i2, 2, "0");
      }, m: function t2(e2, n2) {
        if (e2.date() < n2.date())
          return -t2(n2, e2);
        var r2 = 12 * (n2.year() - e2.year()) + (n2.month() - e2.month()), i2 = e2.clone().add(r2, f), s2 = n2 - i2 < 0, u2 = e2.clone().add(r2 + (s2 ? -1 : 1), f);
        return +(-(r2 + (n2 - i2) / (s2 ? i2 - u2 : u2 - i2)) || 0);
      }, a: function(t2) {
        return t2 < 0 ? Math.ceil(t2) || 0 : Math.floor(t2);
      }, p: function(t2) {
        return { M: f, y: c, w: o, d: a, D: d, h: u, m: s, s: i, ms: r, Q: h }[t2] || String(t2 || "").toLowerCase().replace(/s$/, "");
      }, u: function(t2) {
        return void 0 === t2;
      } }, v = "en", D = {};
      D[v] = M;
      var p = function(t2) {
        return t2 instanceof _;
      }, S = function t2(e2, n2, r2) {
        var i2;
        if (!e2)
          return v;
        if ("string" == typeof e2) {
          var s2 = e2.toLowerCase();
          D[s2] && (i2 = s2), n2 && (D[s2] = n2, i2 = s2);
          var u2 = e2.split("-");
          if (!i2 && u2.length > 1)
            return t2(u2[0]);
        } else {
          var a2 = e2.name;
          D[a2] = e2, i2 = a2;
        }
        return !r2 && i2 && (v = i2), i2 || !r2 && v;
      }, w = function(t2, e2) {
        if (p(t2))
          return t2.clone();
        var n2 = "object" == typeof e2 ? e2 : {};
        return n2.date = t2, n2.args = arguments, new _(n2);
      }, O = g;
      O.l = S, O.i = p, O.w = function(t2, e2) {
        return w(t2, { locale: e2.$L, utc: e2.$u, x: e2.$x, $offset: e2.$offset });
      };
      var _ = function() {
        function M2(t2) {
          this.$L = S(t2.locale, null, true), this.parse(t2);
        }
        var m2 = M2.prototype;
        return m2.parse = function(t2) {
          this.$d = function(t3) {
            var e2 = t3.date, n2 = t3.utc;
            if (null === e2)
              return new Date(NaN);
            if (O.u(e2))
              return new Date();
            if (e2 instanceof Date)
              return new Date(e2);
            if ("string" == typeof e2 && !/Z$/i.test(e2)) {
              var r2 = e2.match(l);
              if (r2) {
                var i2 = r2[2] - 1 || 0, s2 = (r2[7] || "0").substring(0, 3);
                return n2 ? new Date(Date.UTC(r2[1], i2, r2[3] || 1, r2[4] || 0, r2[5] || 0, r2[6] || 0, s2)) : new Date(r2[1], i2, r2[3] || 1, r2[4] || 0, r2[5] || 0, r2[6] || 0, s2);
              }
            }
            return new Date(e2);
          }(t2), this.$x = t2.x || {}, this.init();
        }, m2.init = function() {
          var t2 = this.$d;
          this.$y = t2.getFullYear(), this.$M = t2.getMonth(), this.$D = t2.getDate(), this.$W = t2.getDay(), this.$H = t2.getHours(), this.$m = t2.getMinutes(), this.$s = t2.getSeconds(), this.$ms = t2.getMilliseconds();
        }, m2.$utils = function() {
          return O;
        }, m2.isValid = function() {
          return !(this.$d.toString() === $);
        }, m2.isSame = function(t2, e2) {
          var n2 = w(t2);
          return this.startOf(e2) <= n2 && n2 <= this.endOf(e2);
        }, m2.isAfter = function(t2, e2) {
          return w(t2) < this.startOf(e2);
        }, m2.isBefore = function(t2, e2) {
          return this.endOf(e2) < w(t2);
        }, m2.$g = function(t2, e2, n2) {
          return O.u(t2) ? this[e2] : this.set(n2, t2);
        }, m2.unix = function() {
          return Math.floor(this.valueOf() / 1e3);
        }, m2.valueOf = function() {
          return this.$d.getTime();
        }, m2.startOf = function(t2, e2) {
          var n2 = this, r2 = !!O.u(e2) || e2, h2 = O.p(t2), $2 = function(t3, e3) {
            var i2 = O.w(n2.$u ? Date.UTC(n2.$y, e3, t3) : new Date(n2.$y, e3, t3), n2);
            return r2 ? i2 : i2.endOf(a);
          }, l2 = function(t3, e3) {
            return O.w(n2.toDate()[t3].apply(n2.toDate("s"), (r2 ? [0, 0, 0, 0] : [23, 59, 59, 999]).slice(e3)), n2);
          }, y2 = this.$W, M3 = this.$M, m3 = this.$D, g2 = "set" + (this.$u ? "UTC" : "");
          switch (h2) {
            case c:
              return r2 ? $2(1, 0) : $2(31, 11);
            case f:
              return r2 ? $2(1, M3) : $2(0, M3 + 1);
            case o:
              var v2 = this.$locale().weekStart || 0, D2 = (y2 < v2 ? y2 + 7 : y2) - v2;
              return $2(r2 ? m3 - D2 : m3 + (6 - D2), M3);
            case a:
            case d:
              return l2(g2 + "Hours", 0);
            case u:
              return l2(g2 + "Minutes", 1);
            case s:
              return l2(g2 + "Seconds", 2);
            case i:
              return l2(g2 + "Milliseconds", 3);
            default:
              return this.clone();
          }
        }, m2.endOf = function(t2) {
          return this.startOf(t2, false);
        }, m2.$set = function(t2, e2) {
          var n2, o2 = O.p(t2), h2 = "set" + (this.$u ? "UTC" : ""), $2 = (n2 = {}, n2[a] = h2 + "Date", n2[d] = h2 + "Date", n2[f] = h2 + "Month", n2[c] = h2 + "FullYear", n2[u] = h2 + "Hours", n2[s] = h2 + "Minutes", n2[i] = h2 + "Seconds", n2[r] = h2 + "Milliseconds", n2)[o2], l2 = o2 === a ? this.$D + (e2 - this.$W) : e2;
          if (o2 === f || o2 === c) {
            var y2 = this.clone().set(d, 1);
            y2.$d[$2](l2), y2.init(), this.$d = y2.set(d, Math.min(this.$D, y2.daysInMonth())).$d;
          } else
            $2 && this.$d[$2](l2);
          return this.init(), this;
        }, m2.set = function(t2, e2) {
          return this.clone().$set(t2, e2);
        }, m2.get = function(t2) {
          return this[O.p(t2)]();
        }, m2.add = function(r2, h2) {
          var d2, $2 = this;
          r2 = Number(r2);
          var l2 = O.p(h2), y2 = function(t2) {
            var e2 = w($2);
            return O.w(e2.date(e2.date() + Math.round(t2 * r2)), $2);
          };
          if (l2 === f)
            return this.set(f, this.$M + r2);
          if (l2 === c)
            return this.set(c, this.$y + r2);
          if (l2 === a)
            return y2(1);
          if (l2 === o)
            return y2(7);
          var M3 = (d2 = {}, d2[s] = e, d2[u] = n, d2[i] = t, d2)[l2] || 1, m3 = this.$d.getTime() + r2 * M3;
          return O.w(m3, this);
        }, m2.subtract = function(t2, e2) {
          return this.add(-1 * t2, e2);
        }, m2.format = function(t2) {
          var e2 = this, n2 = this.$locale();
          if (!this.isValid())
            return n2.invalidDate || $;
          var r2 = t2 || "YYYY-MM-DDTHH:mm:ssZ", i2 = O.z(this), s2 = this.$H, u2 = this.$m, a2 = this.$M, o2 = n2.weekdays, f2 = n2.months, h2 = function(t3, n3, i3, s3) {
            return t3 && (t3[n3] || t3(e2, r2)) || i3[n3].slice(0, s3);
          }, c2 = function(t3) {
            return O.s(s2 % 12 || 12, t3, "0");
          }, d2 = n2.meridiem || function(t3, e3, n3) {
            var r3 = t3 < 12 ? "AM" : "PM";
            return n3 ? r3.toLowerCase() : r3;
          }, l2 = { YY: String(this.$y).slice(-2), YYYY: this.$y, M: a2 + 1, MM: O.s(a2 + 1, 2, "0"), MMM: h2(n2.monthsShort, a2, f2, 3), MMMM: h2(f2, a2), D: this.$D, DD: O.s(this.$D, 2, "0"), d: String(this.$W), dd: h2(n2.weekdaysMin, this.$W, o2, 2), ddd: h2(n2.weekdaysShort, this.$W, o2, 3), dddd: o2[this.$W], H: String(s2), HH: O.s(s2, 2, "0"), h: c2(1), hh: c2(2), a: d2(s2, u2, true), A: d2(s2, u2, false), m: String(u2), mm: O.s(u2, 2, "0"), s: String(this.$s), ss: O.s(this.$s, 2, "0"), SSS: O.s(this.$ms, 3, "0"), Z: i2 };
          return r2.replace(y, function(t3, e3) {
            return e3 || l2[t3] || i2.replace(":", "");
          });
        }, m2.utcOffset = function() {
          return 15 * -Math.round(this.$d.getTimezoneOffset() / 15);
        }, m2.diff = function(r2, d2, $2) {
          var l2, y2 = O.p(d2), M3 = w(r2), m3 = (M3.utcOffset() - this.utcOffset()) * e, g2 = this - M3, v2 = O.m(this, M3);
          return v2 = (l2 = {}, l2[c] = v2 / 12, l2[f] = v2, l2[h] = v2 / 3, l2[o] = (g2 - m3) / 6048e5, l2[a] = (g2 - m3) / 864e5, l2[u] = g2 / n, l2[s] = g2 / e, l2[i] = g2 / t, l2)[y2] || g2, $2 ? v2 : O.a(v2);
        }, m2.daysInMonth = function() {
          return this.endOf(f).$D;
        }, m2.$locale = function() {
          return D[this.$L];
        }, m2.locale = function(t2, e2) {
          if (!t2)
            return this.$L;
          var n2 = this.clone(), r2 = S(t2, e2, true);
          return r2 && (n2.$L = r2), n2;
        }, m2.clone = function() {
          return O.w(this.$d, this);
        }, m2.toDate = function() {
          return new Date(this.valueOf());
        }, m2.toJSON = function() {
          return this.isValid() ? this.toISOString() : null;
        }, m2.toISOString = function() {
          return this.$d.toISOString();
        }, m2.toString = function() {
          return this.$d.toUTCString();
        }, M2;
      }(), T = _.prototype;
      return w.prototype = T, [["$ms", r], ["$s", i], ["$m", s], ["$H", u], ["$W", a], ["$M", f], ["$y", c], ["$D", d]].forEach(function(t2) {
        T[t2[1]] = function(e2) {
          return this.$g(e2, t2[0], t2[1]);
        };
      }), w.extend = function(t2, e2) {
        return t2.$i || (t2(e2, _, w), t2.$i = true), w;
      }, w.locale = S, w.isDayjs = p, w.unix = function(t2) {
        return w(1e3 * t2);
      }, w.en = D[v], w.Ls = D, w.p = {}, w;
    });
  }
});

// node_modules/.pnpm/dayjs@1.11.3/node_modules/dayjs/plugin/isBetween.js
var require_isBetween = __commonJS({
  "node_modules/.pnpm/dayjs@1.11.3/node_modules/dayjs/plugin/isBetween.js"(exports, module) {
    !function(e, i) {
      "object" == typeof exports && "undefined" != typeof module ? module.exports = i() : "function" == typeof define && define.amd ? define(i) : (e = "undefined" != typeof globalThis ? globalThis : e || self).dayjs_plugin_isBetween = i();
    }(exports, function() {
      "use strict";
      return function(e, i, t) {
        i.prototype.isBetween = function(e2, i2, s, f) {
          var n = t(e2), o = t(i2), r = "(" === (f = f || "()")[0], u = ")" === f[1];
          return (r ? this.isAfter(n, s) : !this.isBefore(n, s)) && (u ? this.isBefore(o, s) : !this.isAfter(o, s)) || (r ? this.isBefore(n, s) : !this.isAfter(n, s)) && (u ? this.isAfter(o, s) : !this.isBefore(o, s));
        };
      };
    });
  }
});

// node_modules/.pnpm/@nbit+chart-utils@1.0.0-beta.36/node_modules/@nbit/chart-utils/es/const/index.js
var timeLocaleLanguageMap = {
  "zh-CN": {
    "\u57FA\u672C\u7248": "\u57FA\u672C\u7248",
    "\u6DF1\u5EA6\u56FE": "\u6DF1\u5EA6\u56FE",
    "\u66F4\u591A": "\u66F4\u591A",
    "1m": "1\u5206",
    "1time": "\u5206\u65F6",
    "3m": "3\u5206",
    "5m": "5\u5206",
    "15m": "15\u5206",
    "30m": "30\u5206",
    "1h": "1\u5C0F\u65F6",
    "2h": "2\u5C0F\u65F6",
    "4h": "4\u5C0F\u65F6",
    "6h": "6\u5C0F\u65F6",
    "8h": "8\u5C0F\u65F6",
    "12h": "12\u5C0F\u65F6",
    "1D": "1\u65E5",
    "3D": "3\u65E5",
    "5D": "5\u65E5",
    "1W": "1\u5468",
    "1M": "1\u6708",
    "3M": "3\u6708",
    "6M": "6\u6708",
    "1Y": "1\u5E74",
    "\u56FE\u8868\u8BBE\u7F6E": "\u56FE\u8868\u8BBE\u7F6E",
    "\u6307\u6807\u8BBE\u7F6E": "\u6307\u6807\u8BBE\u7F6E",
    "\u65F6\u95F4\u5468\u671F": "\u65F6\u95F4\u5468\u671F",
    "\u56FE\u8868\u9AD8\u5EA6": "\u56FE\u8868\u9AD8\u5EA6",
    "\u504F\u4F4E": "\u504F\u4F4E",
    "\u9ED8\u8BA4": "\u9ED8\u8BA4",
    "\u504F\u9AD8": "\u504F\u9AD8",
    "\u53D6\u6D88": "\u53D6\u6D88",
    "\u5C55\u793A\u5468\u671F": "\u5C55\u793A\u5468\u671F",
    "\u91CD\u7F6E": "\u91CD\u7F6E",
    "\u786E\u8BA4": "\u786E\u8BA4",
    "\u5FC5\u987B\u9009\u62E9\u4E94\u4E2A\u65F6\u95F4": "\u5FC5\u987B\u9009\u62E9\u4E94\u4E2A\u65F6\u95F4",
    "\u4E3B\u56FE": "\u4E3B\u56FE",
    "\u526F\u56FE": "\u526F\u56FE",
    "\u65F6\u95F4": "\u65F6\u95F4",
    "\u5F00": "\u5F00",
    "\u9AD8": "\u9AD8",
    "\u4F4E": "\u4F4E",
    "\u6536": "\u6536",
    "\u6DA8\u8DCC\u5E45": "\u6DA8\u8DCC\u5E45",
    "\u632F\u5E45": "\u632F\u5E45",
    "\u91CF": "\u91CF",
    "\u989D": "\u989D",
    "\u6210\u4EA4": "\u6210\u4EA4",
    "\u7B14": "\u7B14",
    "\u5747\u4EF7": "\u5747\u4EF7",
    "\u4E70\u5165": "\u4E70\u5165",
    "\u67E5\u770B\u660E\u7EC6": "\u67E5\u770B\u660E\u7EC6",
    "\u5356\u51FA": "\u5356\u51FA",
    "\u6570\u91CF": "\u6570\u91CF",
    "\u4EF7\u683C": "\u4EF7\u683C",
    "\u624B\u7EED\u8D39": "\u624B\u7EED\u8D39",
    "\u8BA2\u5355\u8BE6\u60C5": "\u8BA2\u5355\u8BE6\u60C5",
    "\u4EF7\u5DEE\u5E45\u5EA6": "\u4EF7\u5DEE\u5E45\u5EA6",
    "\u59D4\u6258\u4EF7\u683C": "\u59D4\u6258\u4EF7\u683C",
    "\u7D2F\u8BA1\u6302\u5355": "\u7D2F\u8BA1\u6302\u5355"
  },
  "zh-HK": {
    "\u57FA\u672C\u7248": "\u57FA\u672C\u7248",
    "\u6DF1\u5EA6\u56FE": "\u6DF1\u5EA6\u5716",
    "\u66F4\u591A": "\u66F4\u591A",
    "1m": "1\u5206",
    "1time": "\u5206\u6642",
    "3m": "3\u5206",
    "5m": "5\u5206",
    "15m": "15\u5206",
    "30m": "30\u5206",
    "1h": "1\u5C0F\u6642",
    "2h": "2\u5C0F\u6642",
    "4h": "4\u5C0F\u6642",
    "6h": "6\u5C0F\u6642",
    "8h": "8\u5C0F\u6642",
    "12h": "12\u5C0F\u6642",
    "1D": "1\u65E5",
    "3D": "3\u65E5",
    "5D": "5\u65E5",
    "1W": "1\u5468",
    "1M": "1\u6708",
    "3M": "3\u6708",
    "6M": "6\u6708",
    "1Y": "1\u5E74",
    "\u56FE\u8868\u8BBE\u7F6E": "\u5716\u6A19\u8A2D\u7F6E",
    "\u6307\u6807\u8BBE\u7F6E": "\u6307\u6A19\u8A2D\u7F6E",
    "\u65F6\u95F4\u5468\u671F": "\u6642\u9593\u9031\u671F",
    "\u56FE\u8868\u9AD8\u5EA6": "\u5716\u8868\u9AD8\u5EA6",
    "\u504F\u4F4E": "\u504F\u4F4E",
    "\u9ED8\u8BA4": "\u9ED8\u8A8D",
    "\u504F\u9AD8": "\u504F\u9AD8",
    "\u53D6\u6D88": "\u53D6\u6D88",
    "\u5C55\u793A\u5468\u671F": "\u5C55\u793A\u9031\u671F",
    "\u91CD\u7F6E": "\u91CD\u7F6E",
    "\u786E\u8BA4": "\u78BA\u8A8D",
    "\u5FC5\u987B\u9009\u62E9\u4E94\u4E2A\u65F6\u95F4": "\u5FC5\u9808\u9078\u64C7\u4E94\u500B\u6642\u9593",
    "\u4E3B\u56FE": "\u4E3B\u5716",
    "\u526F\u56FE": "\u526F\u5716",
    "\u65F6\u95F4": "\u6642\u9593",
    "\u5F00": "\u958B",
    "\u9AD8": "\u9AD8",
    "\u4F4E": "\u4F4E",
    "\u6536": "\u6536",
    "\u6DA8\u8DCC\u5E45": "\u6F32\u8DCC\u5E45",
    "\u632F\u5E45": "\u632F\u5E45",
    "\u91CF": "\u91CF",
    "\u989D": "\u984D",
    "\u6210\u4EA4": "\u6210\u4EA4",
    "\u7B14": "\u7B46",
    "\u5747\u4EF7": "\u5747\u50F9",
    "\u4E70\u5165": "\u8CB7\u5165",
    "\u67E5\u770B\u660E\u7EC6": "\u67E5\u770B\u660E\u7D30",
    "\u5356\u51FA": "\u8CE3\u51FA",
    "\u6570\u91CF": "\u6578\u91CF",
    "\u4EF7\u683C": "\u50F9\u683C",
    "\u624B\u7EED\u8D39": "\u624B\u7E8C\u8CBB",
    "\u8BA2\u5355\u8BE6\u60C5": "\u8A02\u55AE\u8A73\u60C5",
    "\u4EF7\u5DEE\u5E45\u5EA6": "\u50F9\u5DEE\u5E45\u5EA6",
    "\u59D4\u6258\u4EF7\u683C": "\u59D4\u8A17\u50F9\u683C",
    "\u7D2F\u8BA1\u6302\u5355": "\u7D2F\u8A08\u639B\u55AE"
  },
  "en-US": {
    "\u57FA\u672C\u7248": "Original",
    "\u6DF1\u5EA6\u56FE": "Depth",
    "\u66F4\u591A": "more",
    "1m": "1m",
    "1time": "Time",
    "3m": "3m",
    "5m": "5m",
    "15m": "15m",
    "30m": "30m",
    "1h": "1h",
    "2h": "2h",
    "4h": "4h",
    "6h": "6h",
    "8h": "8h",
    "12h": "12h",
    "1D": "1D",
    "3D": "3D",
    "5D": "5D",
    "1W": "1W",
    "1M": "1M",
    "3M": "3M",
    "6M": "6M",
    "1Y": "1Y",
    "\u56FE\u8868\u8BBE\u7F6E": "Chart Settings",
    "\u6307\u6807\u8BBE\u7F6E": "Indicator Setting",
    "\u65F6\u95F4\u5468\u671F": "Cycle time",
    "\u56FE\u8868\u9AD8\u5EA6": "Chart Height",
    "\u504F\u4F4E": "Low",
    "\u9ED8\u8BA4": "Default",
    "\u504F\u9AD8": "High",
    "\u53D6\u6D88": "Cancel",
    "\u5C55\u793A\u5468\u671F": "Exhibition cycle",
    "\u91CD\u7F6E": "Reset",
    "\u786E\u8BA4": "Confirm",
    "\u5FC5\u987B\u9009\u62E9\u4E94\u4E2A\u65F6\u95F4": "Five times must be selected",
    "\u4E3B\u56FE": "Main drawing",
    "\u526F\u56FE": "Secondary drawing",
    "\u65F6\u95F4": "Time",
    "\u5F00": "Open",
    "\u9AD8": "High",
    "\u4F4E": "Low",
    "\u6536": "Close",
    "\u6DA8\u8DCC\u5E45": "Chg",
    "\u632F\u5E45": "Amplitude",
    "\u91CF": "Volume",
    "\u989D": "QuoteVolume",
    "\u6210\u4EA4": "Deal",
    "\u7B14": "Pen",
    "\u5747\u4EF7": "Average price",
    "\u4E70\u5165": "Buy",
    "\u67E5\u770B\u660E\u7EC6": "View details",
    "\u5356\u51FA": "Sell",
    "\u6570\u91CF": "Count",
    "\u4EF7\u683C": "Price",
    "\u624B\u7EED\u8D39": "Service charge",
    "\u8BA2\u5355\u8BE6\u60C5": "Order details",
    "\u4EF7\u5DEE\u5E45\u5EA6": "Spread",
    "\u59D4\u6258\u4EF7\u683C": "Commission price",
    "\u7D2F\u8BA1\u6302\u5355": "Accumulated pending orders"
  }
};
var timeMap = {
  "1time": "1m",
  "1m": "1m",
  "3m": "3m",
  "5m": "5m",
  "15m": "15m",
  "30m": "30m",
  "1h": "1h",
  "2h": "2h",
  "4h": "4h",
  "6h": "6h",
  "8h": "8h",
  "12h": "12h",
  "1D": "1d",
  "3D": "3d",
  "5D": "5d",
  "1W": "1w",
  "1M": "1M",
  "3M": "3M",
  "6M": "6M",
  "1Y": "1y"
};
var tradingviewTimeMap = {
  "1time": "1",
  "1m": "1",
  "3m": "3",
  "5m": "5",
  "15m": "15",
  "30m": "30",
  "1h": "60",
  "2h": "120",
  "4h": "240",
  "6h": "360",
  "8h": "480",
  "12h": "720",
  "1D": "1440",
  "3D": "4320",
  "5D": "7200",
  "1W": "10080",
  "1M": "43200",
  "3M": "129600",
  "6M": "259200",
  "1Y": "518400"
};
var TradingviewIndicatorType;
(function(TradingviewIndicatorType2) {
  TradingviewIndicatorType2["ChartProperties"] = "chartProperties";
  TradingviewIndicatorType2["InsertIndicator"] = "insertIndicator";
})(TradingviewIndicatorType || (TradingviewIndicatorType = {}));
var shareTimeList = [{
  unit: "m",
  value: 1
}, {
  unit: "m",
  value: 5
}, {
  unit: "m",
  value: 15
}, {
  unit: "m",
  value: 30
}, {
  unit: "h",
  value: 1
}, {
  unit: "h",
  value: 2
}, {
  unit: "h",
  value: 4
}, {
  unit: "D",
  value: 1
}, {
  unit: "W",
  value: 1
}, {
  unit: "M",
  value: 1
}];
var LanguageMapToChartMap = {
  "zh-CN": "zh",
  "zh-HK": "zh_TW",
  "en-US": "en",
  "ja-JP": "ja",
  "ko-KR": "ko",
  "th-TH": "th_TH",
  "zh-TW": "zh_TW",
  "fr-FR": "fr",
  "de-DE": "de_DE",
  "it-IT": "it",
  "es-ES": "es",
  "vi-VN": "vi"
};
var ThemeChartMap = {
  light: "Light",
  dark: "Dark"
};
var WSThrottleTypeEnum;
(function(WSThrottleTypeEnum2) {
  WSThrottleTypeEnum2[WSThrottleTypeEnum2["none"] = 0] = "none";
  WSThrottleTypeEnum2[WSThrottleTypeEnum2["cover"] = 1] = "cover";
  WSThrottleTypeEnum2[WSThrottleTypeEnum2["increment"] = 2] = "increment";
})(WSThrottleTypeEnum || (WSThrottleTypeEnum = {}));
var ThemeEnum;
(function(ThemeEnum2) {
  ThemeEnum2["light"] = "light";
  ThemeEnum2["dark"] = "dark";
})(ThemeEnum || (ThemeEnum = {}));
var bollKList = [{
  name: "UP",
  value: "upper"
}, {
  name: "MB",
  value: "mid"
}, {
  name: "DN",
  value: "lower"
}];
var macdKList = [{
  name: "dea",
  value: "dea"
}, {
  name: "dif",
  value: "dif"
}, {
  name: "macd",
  value: "macd"
}];
var kdjKList = [{
  name: "K",
  value: "k"
}, {
  name: "D",
  value: "d"
}, {
  name: "J",
  value: "j"
}];

// node_modules/.pnpm/@nbit+chart-utils@1.0.0-beta.36/node_modules/@nbit/chart-utils/es/type/index.js
var DeptChartSpecieEnum;
(function(DeptChartSpecieEnum2) {
  DeptChartSpecieEnum2["Dept"] = "dept";
  DeptChartSpecieEnum2["DeptCurrent"] = "deptCurrent";
})(DeptChartSpecieEnum || (DeptChartSpecieEnum = {}));
var TimeSharingType;
(function(TimeSharingType2) {
  TimeSharingType2["Min"] = "m";
  TimeSharingType2["Hour"] = "h";
  TimeSharingType2["Day"] = "D";
  TimeSharingType2["Week"] = "W";
  TimeSharingType2["Mon"] = "M";
})(TimeSharingType || (TimeSharingType = {}));
var KLineChartType;
(function(KLineChartType2) {
  KLineChartType2["Quote"] = "quote";
  KLineChartType2["ContractFunding"] = "contractFunding";
  KLineChartType2["Futures"] = "futures";
})(KLineChartType || (KLineChartType = {}));

// node_modules/.pnpm/@nbit+chart-utils@1.0.0-beta.36/node_modules/@nbit/chart-utils/es/util/index.js
var import_dayjs = __toESM(require_dayjs_min());
var sortMarketChartData = function sortMarketChartData2(data) {
  var sortData = data.sort(function(x, y) {
    return x.time - y.time;
  });
  var timeList = [];
  var resultList = [];
  sortData.forEach(function(item) {
    if (timeList.indexOf(item.time) === -1) {
      timeList.push(item.time);
      resultList.push(item);
    }
  });
  return resultList;
};
var getCurrentQuoteApiCoin = function getCurrentQuoteApiCoin2(sellSymbol, buySymbol) {
  return "".concat(sellSymbol, "_").concat(buySymbol).toLowerCase();
};
var getCurrentQuoteShowCoin = function getCurrentQuoteShowCoin2(sellSymbol, buySymbol) {
  return "".concat(sellSymbol, "/").concat(buySymbol);
};
var fullscreen = function fullscreen2(fullscreenRef, isFullScreen, setIsFullScreen) {
  var tv = fullscreenRef.current;
  var _document = document;
  if (!isFullScreen) {
    if (tv !== null && tv !== void 0 && tv.requestFullscreen) {
      tv.requestFullscreen();
    } else if (tv !== null && tv !== void 0 && tv.webkitRequestFullScreen) {
      tv === null || tv === void 0 ? void 0 : tv.webkitRequestFullScreen();
    } else if (tv !== null && tv !== void 0 && tv.mozRequestFullScreen) {
      tv.mozRequestFullScreen();
    } else if (tv !== null && tv !== void 0 && tv.msRequestFullscreen) {
      tv.msRequestFullscreen();
    }
  } else {
    if (_document.exitFullscreen) {
      _document.exitFullscreen();
    } else if (_document.msExitFullscreen) {
      _document.msExitFullscreen();
    } else if (_document.mozCancelFullScreen) {
      _document.mozCancelFullScreen();
    } else if (_document.webkitExitFullscreen) {
      _document.webkitExitFullscreen();
    }
  }
  setIsFullScreen(!isFullScreen);
};
var checkIsUp = function checkIsUp2(value) {
  return (value === null || value === void 0 ? void 0 : value.close) > (value === null || value === void 0 ? void 0 : value.open);
};
var showFormatTime = function showFormatTime2(item, unit) {
  if (unit === TimeSharingType.Mon) {
    return (0, import_dayjs.default)(item).format("YYYY-MM");
  }
  if (unit === TimeSharingType.Week || unit === TimeSharingType.Day) {
    return (0, import_dayjs.default)(item).format("MM-DD");
  }
  return (0, import_dayjs.default)(item).format("HH:mm");
};

// node_modules/.pnpm/@nbit+chart-utils@1.0.0-beta.36/node_modules/@nbit/chart-utils/es/util/indicator.js
var import_dayjs2 = __toESM(require_dayjs_min());
var import_isBetween = __toESM(require_isBetween());
function _typeof(obj) {
  "@babel/helpers - typeof";
  return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(obj2) {
    return typeof obj2;
  } : function(obj2) {
    return obj2 && "function" == typeof Symbol && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
  }, _typeof(obj);
}
function ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys.push.apply(keys, symbols);
  }
  return keys;
}
function _objectSpread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = null != arguments[i] ? arguments[i] : {};
    i % 2 ? ownKeys(Object(source), true).forEach(function(key) {
      _defineProperty(target, key, source[key]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function(key) {
      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
    });
  }
  return target;
}
function _defineProperty(obj, key, value) {
  key = _toPropertyKey(key);
  if (key in obj) {
    Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key] = value;
  }
  return obj;
}
function _toPropertyKey(arg) {
  var key = _toPrimitive(arg, "string");
  return _typeof(key) === "symbol" ? key : String(key);
}
function _toPrimitive(input, hint) {
  if (_typeof(input) !== "object" || input === null)
    return input;
  var prim = input[Symbol.toPrimitive];
  if (prim !== void 0) {
    var res = prim.call(input, hint || "default");
    if (_typeof(res) !== "object")
      return res;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return (hint === "string" ? String : Number)(input);
}
import_dayjs2.default.extend(import_isBetween.default);
var calculateSMA = function calculateSMA2(data, count, price, priceOffset) {
  var result = [];
  var avg = function avg2(data2) {
    var sum = 0;
    for (var i2 = 0; i2 < data2.length; i2 += 1) {
      var _data$i;
      sum += (_data$i = data2[i2]) === null || _data$i === void 0 ? void 0 : _data$i[price];
    }
    return sum / data2.length;
  };
  for (var i = count - 1, len = data.length; i < len; i += 1) {
    var val = avg(data.slice(i - count + 1, i + 1));
    if (i - count + 1 === 0) {
      for (var j = 0; j < count; j += 1) {
        var _data$j;
        result.push({
          time: (_data$j = data[j]) === null || _data$j === void 0 ? void 0 : _data$j.time,
          value: Number(val.toFixed(priceOffset))
        });
      }
    } else {
      var _data$i2;
      result.push({
        time: (_data$i2 = data[i]) === null || _data$i2 === void 0 ? void 0 : _data$i2.time,
        value: Number(val.toFixed(priceOffset))
      });
    }
  }
  return result;
};
var calculateEMA = function calculateEMA2(ema, price, period) {
  return (2 * price + (period - 1) * ema) / (period + 1);
};
var calculateMACD = function calculateMACD2(data, fast, slow, signal, priceOffset) {
  var newData = [];
  data.forEach(function(item, index) {
    var emaFast = 0;
    var emaSlow = 0;
    var dea = 0;
    var dif = 0;
    if (index < fast - 1) {
      emaFast = 0;
    } else {
      var _newData;
      emaFast = calculateEMA(((_newData = newData[index - 1]) === null || _newData === void 0 ? void 0 : _newData.emaFast) || 0, item.close, fast);
    }
    if (index < slow - 1) {
      emaSlow = 0;
    } else {
      var _newData2;
      emaSlow = calculateEMA(((_newData2 = newData[index - 1]) === null || _newData2 === void 0 ? void 0 : _newData2.emaSlow) || 0, item.close, slow);
    }
    dif = emaFast - emaSlow;
    if (index < signal - 1) {
      dea = 0;
    } else {
      var _newData3;
      dea = calculateEMA(((_newData3 = newData[index - 1]) === null || _newData3 === void 0 ? void 0 : _newData3.dea) || 0, dif, signal);
    }
    newData.push({
      emaFast: Number(emaFast.toFixed(priceOffset)),
      emaSlow: Number(emaSlow.toFixed(priceOffset)),
      dif: Number(dif.toFixed(priceOffset)),
      dea: Number(dea.toFixed(priceOffset)),
      value: Number(((dif - dea) * 2).toFixed(priceOffset)),
      time: item.time
    });
  });
  return newData;
};
var updateTimeOfData = function updateTimeOfData2(value, type, kLineChartData) {
  var timeList = kLineChartData.map(function(item, index) {
    return {
      index,
      time: (0, import_dayjs2.default)(item.time).format("YYYY-MM-DD HH:mm")
    };
  });
  var newData = [];
  if (type === TimeSharingType.Min) {
    var i = 0;
    while (i < timeList.length) {
      var min = Number(timeList[i].time.split(" ")[1].split(":")[1]);
      if (min === 0 || min % value === 0) {
        newData.push(_objectSpread({}, kLineChartData[i]));
        i += 1;
      } else {
        var remainder = min % value;
        var tempIndex = remainder;
        var tempObj = {};
        while (tempIndex <= value && i < timeList.length) {
          if (!tempObj.low) {
            tempObj.low = kLineChartData[i].low;
          } else {
            if (kLineChartData[i].low < tempObj.low) {
              tempObj.low = kLineChartData[i].low;
            }
          }
          if (!tempObj.high) {
            tempObj.high = kLineChartData[i].high;
          } else {
            if (kLineChartData[i].high > tempObj.high) {
              tempObj.high = kLineChartData[i].high;
            }
          }
          if (tempIndex === remainder) {
            tempObj.open = kLineChartData[i].open;
          }
          tempObj.close = kLineChartData[i].close;
          tempIndex += 1;
          i += 1;
          if (i === timeList.length) {
            tempObj.time = kLineChartData[i - 1].time + 1e3 * 60 * (value - tempIndex + 1);
          } else {
            tempObj.time = kLineChartData[i - 1].time;
          }
        }
        newData.push(_objectSpread({}, tempObj));
      }
    }
  }
  if (type === TimeSharingType.Hour) {
    var _i = 0;
    while (_i < timeList.length) {
      var hour = Number(timeList[_i].time.split(" ")[1].split(":")[0]);
      var _min = Number(timeList[_i].time.split(" ")[1].split(":")[1]);
      if (_min === 0 && hour % value === 0) {
        newData.push(_objectSpread({}, kLineChartData[_i]));
        _i += 1;
      } else {
        var _remainder = hour % value;
        var _tempIndex2 = _remainder * 60 + _min;
        var _tempIndex = _tempIndex2;
        var _tempObj = {};
        while (_tempIndex2 <= value * 60 && _i < timeList.length) {
          if (!_tempObj.low) {
            _tempObj.low = kLineChartData[_i].low;
          } else {
            if (kLineChartData[_i].low < _tempObj.low) {
              _tempObj.low = kLineChartData[_i].low;
            }
          }
          if (!_tempObj.high) {
            _tempObj.high = kLineChartData[_i].high;
          } else {
            if (kLineChartData[_i].high > _tempObj.high) {
              _tempObj.high = kLineChartData[_i].high;
            }
          }
          if (_tempIndex2 === _tempIndex) {
            _tempObj.open = kLineChartData[_i].open;
          }
          _tempObj.close = kLineChartData[_i].close;
          _tempIndex2 += 1;
          _i += 1;
          if (_i === timeList.length) {
            _tempObj.time = kLineChartData[_i - 1].time + 1e3 * 60 * (value * 60 - _tempIndex2 + 1);
          } else {
            _tempObj.time = kLineChartData[_i - 1].time;
          }
        }
        newData.push(_objectSpread({}, _tempObj));
      }
    }
  }
  if (type === TimeSharingType.Week) {
    var _i2 = 0;
    while (_i2 < timeList.length) {
      var date = timeList[_i2].time.split(" ")[0];
      var dayOfWeek = (0, import_dayjs2.default)(kLineChartData[_i2].time).day();
      var _tempIndex3 = _i2;
      var newDate = dayOfWeek === 7 ? timeList[_i2].time.split(" ")[0] : (0, import_dayjs2.default)(timeList[_i2].time.split(" ")[0]).add(7 - dayOfWeek, "day").format("YYYY-MM-DD");
      var _tempObj2 = {};
      var tempDate = date;
      while ((0, import_dayjs2.default)(tempDate).isBetween(date, newDate, null, "[]") && _i2 < timeList.length) {
        if (!_tempObj2.low) {
          _tempObj2.low = kLineChartData[_i2].low;
        } else {
          if (kLineChartData[_i2].low < _tempObj2.low) {
            _tempObj2.low = kLineChartData[_i2].low;
          }
        }
        if (!_tempObj2.high) {
          _tempObj2.high = kLineChartData[_i2].high;
        } else {
          if (kLineChartData[_i2].high > _tempObj2.high) {
            _tempObj2.high = kLineChartData[_i2].high;
          }
        }
        if (_tempIndex3 === _i2) {
          _tempObj2.open = kLineChartData[_i2].open;
        }
        _tempObj2.close = kLineChartData[_i2].close;
        _i2 += 1;
        _tempObj2.time = (0, import_dayjs2.default)(newDate).valueOf();
        if (_i2 !== timeList.length) {
          tempDate = timeList[_i2].time.split(" ")[0];
        }
      }
      newData.push(_objectSpread({}, _tempObj2));
    }
  }
  if (type === TimeSharingType.Mon) {
    var _i3 = 0;
    while (_i3 < timeList.length) {
      var year = Number(timeList[_i3].time.split(" ")[0].split("-")[0]);
      var mon = Number(timeList[_i3].time.split(" ")[0].split("-")[1]);
      var _remainder2 = mon % value;
      var tempMon = mon;
      var tempYear = year;
      var _tempIndex4 = _i3;
      var _tempObj3 = {};
      while (tempMon === mon && tempYear === year && _i3 < timeList.length) {
        if (!_tempObj3.low) {
          _tempObj3.low = kLineChartData[_i3].low;
        } else {
          if (kLineChartData[_i3].low < _tempObj3.low) {
            _tempObj3.low = kLineChartData[_i3].low;
          }
        }
        if (!_tempObj3.high) {
          _tempObj3.high = kLineChartData[_i3].high;
        } else {
          if (kLineChartData[_i3].high > _tempObj3.high) {
            _tempObj3.high = kLineChartData[_i3].high;
          }
        }
        if (_tempIndex4 === _i3) {
          _tempObj3.open = kLineChartData[_i3].open;
        }
        _tempObj3.close = kLineChartData[_i3].close;
        _i3 += 1;
        if (Number(timeList[_i3 === timeList.length ? _i3 - 1 : _i3].time.split(" ")[0].split("-")[0]) !== tempYear || Number(timeList[_i3 === timeList.length ? _i3 - 1 : _i3].time.split(" ")[0].split("-")[1]) !== tempMon) {
          tempYear = Number(timeList[_i3 === timeList.length ? _i3 - 1 : _i3].time.split(" ")[0].split("-")[0]);
          tempMon = Number(timeList[_i3 === timeList.length ? _i3 - 1 : _i3].time.split(" ")[0].split("-")[1]);
        }
        if (_i3 === timeList.length) {
          _tempObj3.time = (0, import_dayjs2.default)("".concat(tempMon + value - _remainder2 > 12 ? tempYear + 1 : tempYear, "-").concat(tempMon + value - _remainder2 > 12 ? tempMon + value - _remainder2 - 12 : tempMon + value - _remainder2, "-1")).valueOf();
        } else {
          _tempObj3.time = kLineChartData[_i3 - 1].time;
        }
      }
      newData.push(_objectSpread({}, _tempObj3));
    }
  }
  return newData;
};
var calBoll = function calBoll2(data) {
  var calcParams = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : [20, 2];
  var priceOffset = arguments.length > 2 ? arguments[2] : void 0;
  var BOLL_N = calcParams[0];
  var BOLL_P = calcParams[1];
  var close;
  var mid;
  var upper;
  var lower;
  var i;
  var j;
  var item = [];
  var val;
  var std;
  var sumTotal = 0;
  for (i = 0; i < data.length; i += 1) {
    var _data$i3;
    close = (_data$i3 = data[i]) === null || _data$i3 === void 0 ? void 0 : _data$i3.close;
    sumTotal += close;
    if (i >= BOLL_N - 1) {
      var _data;
      mid = sumTotal / BOLL_N;
      std = 0;
      for (j = i - (BOLL_N - 1); j <= i; j += 1) {
        var _data$j2;
        val = ((_data$j2 = data[j]) === null || _data$j2 === void 0 ? void 0 : _data$j2.close) - mid;
        std += val * val;
      }
      std = Math.sqrt(std / BOLL_N);
      upper = mid + BOLL_P * std;
      lower = mid - BOLL_P * std;
      sumTotal -= (_data = data[i - (BOLL_N - 1)]) === null || _data === void 0 ? void 0 : _data.close;
    } else {
      mid = 0;
      upper = 0;
      lower = 0;
    }
    if (mid && upper && lower) {
      var _mid, _upper, _lower, _data$i4;
      item.push({
        mid: Number((_mid = mid) === null || _mid === void 0 ? void 0 : _mid.toFixed(priceOffset)),
        upper: Number((_upper = upper) === null || _upper === void 0 ? void 0 : _upper.toFixed(priceOffset)),
        lower: Number((_lower = lower) === null || _lower === void 0 ? void 0 : _lower.toFixed(priceOffset)),
        time: (_data$i4 = data[i]) === null || _data$i4 === void 0 ? void 0 : _data$i4.time
      });
    }
  }
  return item;
};
function calKdj(data) {
  var calcParams = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : [9, 3, 3];
  var priceOffset = arguments.length > 2 ? arguments[2] : void 0;
  var KDJ_N = calcParams[0];
  var KDJ_M1 = calcParams[1];
  var KDJ_M2 = calcParams[2];
  var close;
  var llvlow = Infinity;
  var llvhigh = -Infinity;
  var rsv;
  var a = 0;
  var b = 0;
  var e;
  var i;
  var j;
  var item = [];
  for (i = 0; i < data.length; i += 1) {
    var _data$i5, _a, _b, _e, _data$i6;
    close = (_data$i5 = data[i]) === null || _data$i5 === void 0 ? void 0 : _data$i5.close;
    llvlow = Infinity;
    llvhigh = -Infinity;
    if (i < KDJ_N) {
      j = 0;
    } else {
      j = i - KDJ_N + 1;
    }
    for (; j <= i; j += 1) {
      var _data$j3, _data$j5;
      if (llvlow > ((_data$j3 = data[j]) === null || _data$j3 === void 0 ? void 0 : _data$j3.low)) {
        var _data$j4;
        llvlow = (_data$j4 = data[j]) === null || _data$j4 === void 0 ? void 0 : _data$j4.low;
      }
      if (llvhigh < ((_data$j5 = data[j]) === null || _data$j5 === void 0 ? void 0 : _data$j5.high)) {
        var _data$j6;
        llvhigh = (_data$j6 = data[j]) === null || _data$j6 === void 0 ? void 0 : _data$j6.high;
      }
    }
    rsv = (close - llvlow) / (llvhigh - llvlow) * 100;
    if (isNaN(rsv) || rsv === -Infinity || rsv === Infinity)
      rsv = 0;
    if (i < KDJ_N) {
      a = (rsv + a * i) / (i + 1);
      b = (a + b * i) / (i + 1);
    } else {
      a = (rsv + (KDJ_M1 - 1) * a) / KDJ_M1;
      b = (a + (KDJ_M2 - 1) * b) / KDJ_M2;
    }
    e = 3 * a - 2 * b;
    item.push({
      k: Number((_a = a) === null || _a === void 0 ? void 0 : _a.toFixed(priceOffset)),
      d: Number((_b = b) === null || _b === void 0 ? void 0 : _b.toFixed(priceOffset)),
      j: Number((_e = e) === null || _e === void 0 ? void 0 : _e.toFixed(priceOffset)),
      time: (_data$i6 = data[i]) === null || _data$i6 === void 0 ? void 0 : _data$i6.time
    });
  }
  return item;
}
var EMA = function EMA2(X, YPre, N) {
  YPre = YPre || 0;
  return (2 * X + (N - 1) * YPre) / (N + 1);
};
var MAX = function MAX2(a, b) {
  return +a > +b ? +a : +b;
};
var MIN = function MIN2(a, b) {
  return +a < +b ? +a : +b;
};
var ABS = function ABS2(a) {
  return Math.abs(+a);
};
var SMA = function SMA2(x, n, m, y) {
  return (m * x + (n - m) * y) / n;
};
function calRsi(data) {
  var calcParams = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : [6, 12, 24];
  var priceOffset = arguments.length > 2 ? arguments[2] : void 0;
  var RSI_N1 = calcParams[0];
  var RSI_N2 = calcParams[1];
  var RSI_N3 = calcParams[2];
  var close;
  var lc;
  var r;
  var r1;
  var r2;
  var s;
  var s1;
  var s2;
  var i;
  var i1;
  var i2;
  var j;
  var item = [];
  for (j = 0; j < data.length; j += 1) {
    var _data$j7, _r, _s, _i4, _data$j8;
    close = (_data$j7 = data[j]) === null || _data$j7 === void 0 ? void 0 : _data$j7.close;
    if (j === 0) {
      lc = close;
      r1 = s1 = i1 = 0;
      r2 = s2 = i2 = 0;
    } else {
      lc = data[j - 1].close;
      r1 = SMA(MAX(close - lc, 0), RSI_N1, 1, r1);
      r2 = SMA(ABS(close - lc), RSI_N1, 1, r2);
      s1 = SMA(MAX(close - lc, 0), RSI_N2, 1, s1);
      s2 = SMA(ABS(close - lc), RSI_N2, 1, s2);
      i1 = SMA(MAX(close - lc, 0), RSI_N3, 1, i1);
      i2 = SMA(ABS(close - lc), RSI_N3, 1, i2);
    }
    r = r1 / r2 * 100 || 0;
    s = s1 / s2 * 100 || 0;
    i = i1 / i2 * 100 || 0;
    item.push({
      r: Number((_r = r) === null || _r === void 0 ? void 0 : _r.toFixed(priceOffset)),
      s: Number((_s = s) === null || _s === void 0 ? void 0 : _s.toFixed(priceOffset)),
      i: Number((_i4 = i) === null || _i4 === void 0 ? void 0 : _i4.toFixed(priceOffset)),
      time: (_data$j8 = data[j]) === null || _data$j8 === void 0 ? void 0 : _data$j8.time
    });
  }
  return item;
}
function calcHnLn(dataList) {
  var hn = Number.MIN_SAFE_INTEGER;
  var ln = Number.MAX_SAFE_INTEGER;
  dataList.forEach(function(data) {
    hn = Math.max(data.high, hn);
    ln = Math.min(data.low, ln);
  });
  return {
    hn,
    ln
  };
}
function calWr(dataList, options) {
  var plots = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : [{
    key: "wr1",
    title: "wr1"
  }, {
    key: "wr2",
    title: "wr2"
  }];
  var priceOffset = arguments.length > 3 ? arguments[3] : void 0;
  return dataList.map(function(kLineData, i) {
    var wr = {
      wr1: 0,
      wr2: 0,
      time: kLineData === null || kLineData === void 0 ? void 0 : kLineData.time
    };
    var close = kLineData === null || kLineData === void 0 ? void 0 : kLineData.close;
    options.forEach(function(param, index) {
      var p = param - 1;
      if (i >= p) {
        var hln = calcHnLn(dataList === null || dataList === void 0 ? void 0 : dataList.slice(i - p, i + 1));
        var hn = hln.hn;
        var ln = hln.ln;
        var hnSubLn = hn - ln;
        wr[plots[index].key] = hnSubLn === 0 ? 0 : Number(((hn - close) / hnSubLn * 100).toFixed(priceOffset));
      }
    });
    return wr;
  });
}
var calcChg = function calcChg2(value, priceOffset) {
  if (!Number(value === null || value === void 0 ? void 0 : value.open)) {
    var temp = 0;
    return "".concat(temp.toFixed(priceOffset), "%");
  }
  var difference = Number(value === null || value === void 0 ? void 0 : value.close) - Number(value === null || value === void 0 ? void 0 : value.open);
  var result = difference / Number(value === null || value === void 0 ? void 0 : value.open) * 100;
  return "".concat(result === null || result === void 0 ? void 0 : result.toFixed(priceOffset), "%");
};
var calcAmp = function calcAmp2(value, priceOffset) {
  if (!Number(value === null || value === void 0 ? void 0 : value.low)) {
    var temp = 0;
    return "".concat(temp.toFixed(priceOffset), "%");
  }
  var difference = Number(value === null || value === void 0 ? void 0 : value.high) - Number(value === null || value === void 0 ? void 0 : value.low);
  var result = difference / Number(value === null || value === void 0 ? void 0 : value.low) * 100;
  return "".concat(result === null || result === void 0 ? void 0 : result.toFixed(priceOffset), "%");
};

// node_modules/.pnpm/@nbit+chart-utils@1.0.0-beta.36/node_modules/@nbit/chart-utils/es/util/theme.js
var getColor = function getColor2(color) {
  return getComputedStyle(document.body).getPropertyValue(color).replace(/(^\s*)|(\s*$)/g, "");
};
var getTheme = function getTheme2() {
  var bgColor = getColor("--bg_color");
  var textColor = getColor("--text_color_03");
  var brandColor = getColor("--brand_color");
  var upColor = getColor("--buy_up_color");
  var downColor = getColor("--sell_down_color");
  var upLightColor = getColor("--buy_up_color_hover");
  var downLightColor = getColor("--sell_down_color_hover");
  var cardBgColor = getColor("--card_bg_color_01");
  var cardBgColor03 = getColor("--card_bg_color_03");
  var textColor01 = getColor("--text_color_01");
  return {
    bgColor,
    textColor,
    brandColor,
    upColor,
    downColor,
    upLightColor,
    downLightColor,
    cardBgColor,
    cardBgColor03,
    textColor01
  };
};
export {
  ABS,
  DeptChartSpecieEnum,
  EMA,
  KLineChartType,
  LanguageMapToChartMap,
  MAX,
  MIN,
  SMA,
  ThemeChartMap,
  ThemeEnum,
  TimeSharingType,
  TradingviewIndicatorType,
  WSThrottleTypeEnum,
  bollKList,
  calBoll,
  calKdj,
  calRsi,
  calWr,
  calcAmp,
  calcChg,
  calcHnLn,
  calculateEMA,
  calculateMACD,
  calculateSMA,
  checkIsUp,
  fullscreen,
  getCurrentQuoteApiCoin,
  getCurrentQuoteShowCoin,
  getTheme,
  kdjKList,
  macdKList,
  shareTimeList,
  showFormatTime,
  sortMarketChartData,
  timeLocaleLanguageMap,
  timeMap,
  tradingviewTimeMap,
  updateTimeOfData
};
//# sourceMappingURL=@nbit_chart-utils.js.map
